# @format

version: '3.8'

services:
  mongodb_1:
    image: mongo:latest
    container_name: mongodb_1
    hostname: mongodb
    volumes:
      - mongodb_1-data:/data/db
      - mongodb_1-config:/data/configdb
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-init.sh:/data/configdb/mongodb-init.sh
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-init_replicas.sh:/data/configdb/mongodb-init_replicas.sh
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-init_user.sh:/data/configdb/mongodb-init_user.sh
    ports:
      - 27017:27017
    command: /bin/bash -c "./data/configdb/mongodb-init.sh && ./data/configdb/mongodb-init_replicas.sh && ./data/configdb/mongodb-init_user.sh"
  mongodb_2:
    image: mongo:latest
    container_name: mongodb_2
    volumes:
      - mongodb_2-data:/data/db
      - mongodb_2-config:/data/configdb
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-init.sh:/data/configdb/mongodb-init.sh
    ports:
      - 27018:27017
    command: /bin/bash -c "./data/configdb/mongodb-init.sh"
    depends_on:
      - mongodb_1
  mongodb_3:
    image: mongo:latest
    container_name: mongodb_3
    volumes:
      - mongodb_3-data:/data/db
      - mongodb_3-config:/data/configdb
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
      - ./backend/hosts/vps/infrastructure/mongodb/mongodb-init.sh:/data/configdb/mongodb-init.sh
    ports:
      - 27019:27017
    command: /bin/bash -c "./data/configdb/mongodb-init.sh"
    depends_on:
      - mongodb_1
  backend:
    image: kdmid-scheduler-backend
    container_name: backend
    hostname: backend
    build:
      context: ./backend
      dockerfile: ./hosts/vps/kdmid_scheduler-api/Dockerfile
    ports:
      - '8080:8080'
    env_file:
      - .env
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - MongoDbConnection__Host=mongodb
      - MongoDbConnection__User=${MONGODBCONNECTION_USERNAME}
      - MongoDbConnection__Password=${MONGODBCONNECTION_PASSWORD}
      - AntiCaptchaConnection__ApiKey=${ANTICAPTCHACONNECTION_APIKEY}
      - TelegramBotConnection__Token=${TELEGRAMBOTCONNECTION_TOKEN}
      - TelegramBotConnection__AdminChatId=${TELEGRAMBOTCONNECTION_ADMINCHATID}
      - Kdmid__WebAppUrl=${KDMID_WEBAPPURL}
    depends_on:
      - mongodb_1
      - mongodb_2
      - mongodb_3
  frontend:
    image: kdmid-scheduler-frontend
    container_name: frontend
    build:
      context: ./frontend/telegram-webapp
      dockerfile: ./Dockerfile
    ports:
      - '3000:3000'
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8080
    depends_on:
      - backend

volumes:
  mongodb_1-data:
  mongodb_2-data:
  mongodb_3-data:
  mongodb_1-config:
  mongodb_2-config:
  mongodb_3-config:
