# @format

version: '3.8'

services:
  mongodb_1:
    image: mongo:latest
    container_name: mongodb_1
    volumes:
      - mongodb_1-data:/data/db
      - mongodb_1-config:/data/configdb
      - ./infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
    ports:
      - 27017:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always

  mongodb_2:
    image: mongo:latest
    container_name: mongodb_2
    volumes:
      - mongodb_2-data:/data/db
      - mongodb_2-config:/data/configdb
      - ./infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
    ports:
      - 27018:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always

  mongodb_3:
    image: mongo:latest
    container_name: mongodb_3
    volumes:
      - mongodb_3-data:/data/db
      - mongodb_3-config:/data/configdb
      - ./infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile
    ports:
      - 27019:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always

  backend:
    image: kdmid-scheduler-backend
    container_name: backend
    build:
      context: ../src/backend
      dockerfile: ./hosts/vps/kdmid_scheduler-api/Dockerfile
    env_file:
      - .env
    environment:
      - MongoDbConnection__Host=mongodb_1
      - MongoDbConnection__User=${MONGODBCONNECTION_USERNAME}
      - MongoDbConnection__Password=${MONGODBCONNECTION_PASSWORD}
      - AntiCaptchaConnection__ApiKey=${ANTICAPTCHACONNECTION_APIKEY}
      - TelegramBotConnection__Token=${TELEGRAMBOTCONNECTION_TOKEN}
      - TelegramBotConnection__AdminChatId=${TELEGRAMBOTCONNECTION_ADMINCHATID}
      - Kdmid__WebAppUrl=${KDMID_WEBAPPURL}
    networks:
      - kdmid-scheduler-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`api.masterlifting.guru`)'
      - 'traefik.http.routers.backend.entrypoints=websecure'
      - 'traefik.http.routers.backend.tls.certresolver=myhttpchallenge'
      - 'traefik.http.services.backend.loadbalancer.server.port=80'
    depends_on:
      - mongodb_1
      - mongodb_2
      - mongodb_3

  frontend:
    image: kdmid-scheduler-frontend
    container_name: frontend
    build:
      context: ../src/frontend/telegram-webapp
      dockerfile: ./Dockerfile
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8080
    networks:
      - kdmid-scheduler-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`www.masterlifting.guru`)'
      - 'traefik.http.routers.frontend.entrypoints=websecure'
      - 'traefik.http.routers.frontend.tls.certresolver=myhttpchallenge'
    depends_on:
      - backend

  traefik:
    image: traefik:v2.3
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myhttpchallenge.acme.tlschallenge=true
      - --certificatesresolvers.myhttpchallenge.acme.email==masterlifting@gmail.com
      - --certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./infrastructure/traefik/letsencrypt:/letsencrypt
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.masterlifting.guru`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=myhttpchallenge'
    networks:
      - kdmid-scheduler-network
    restart: always

networks:
  kdmid-scheduler-network: {}

volumes:
  mongodb_1-data:
  mongodb_2-data:
  mongodb_3-data:
  mongodb_1-config:
  mongodb_2-config:
  mongodb_3-config:
