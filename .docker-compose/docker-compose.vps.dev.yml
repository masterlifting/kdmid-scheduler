# @format

version: '3.8'

services:
  mongodb_1:
    image: mongo:7
    container_name: mongodb_1
    volumes:
      - mongodb_1-data:/data/db
      - mongodb_1-config:/data/configdb
      - ../../kdmid-scheduler-secrets/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile # chmod 600
    ports:
      - 27017:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always
  mongodb_2:
    image: mongo:7
    container_name: mongodb_2
    volumes:
      - mongodb_2-data:/data/db
      - mongodb_2-config:/data/configdb
      - ../../kdmid-scheduler-secrets/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile # chmod 600
    ports:
      - 27018:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always
  mongodb_3:
    image: mongo:7
    container_name: mongodb_3
    volumes:
      - mongodb_3-data:/data/db
      - mongodb_3-config:/data/configdb
      - ../../kdmid-scheduler-secrets/infrastructure/mongodb/mongodb-keyfile:/opt/keyfiles/mongodb-keyfile # chmod 600
    ports:
      - 27019:27017
    command: /bin/bash -c "chmod 600 /opt/keyfiles/mongodb-keyfile && mongod --logpath /var/log/mongodb.log --bind_ip_all --replSet rs0 --keyFile /opt/keyfiles/mongodb-keyfile"
    networks:
      - kdmid-scheduler-network
    restart: always

  # backend-api:
  #   image: kdmid-scheduler-backend-api
  #   container_name: backend-api
  #   build:
  #     context: ../src/backend
  #     dockerfile: ./hosts/vps/kdmid_scheduler-api/Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - MongoDbConnection__Host=mongodb_1
  #     - MongoDbConnection__User=${MONGODBCONNECTION_USERNAME}
  #     - MongoDbConnection__Password=${MONGODBCONNECTION_PASSWORD}
  #     - AntiCaptchaConnection__ApiKey=${ANTICAPTCHACONNECTION_APIKEY}
  #     - BotConnection__Token=${BOTCONNECTION_TOKEN}
  #     - BotConnection__AdminId=${BOTCONNECTION_ADMINID}
  #   networks:
  #     - kdmid-scheduler-network
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - mongodb_1
  #     - mongodb_2
  #     - mongodb_3
  #   restart: always

  # backend-worker:
  #   image: kdmid-scheduler-backend-worker
  #   container_name: backend-worker
  #   build:
  #     context: ../src/backend
  #     dockerfile: ./hosts/vps/kdmid_scheduler-worker/Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     - DOTNET_ENVIRONMENT=Development
  #     - MongoDbConnection__Host=mongodb_1
  #     - MongoDbConnection__User=${MONGODBCONNECTION_USERNAME}
  #     - MongoDbConnection__Password=${MONGODBCONNECTION_PASSWORD}
  #     - AntiCaptchaConnection__ApiKey=${ANTICAPTCHACONNECTION_APIKEY}
  #     - BotConnection__Token=${BOTCONNECTION_TOKEN}
  #     - BotConnection__AdminId=${BOTCONNECTION_ADMINID}
  #   networks:
  #     - kdmid-scheduler-network
  #   depends_on:
  #     - backend-api
  #   restart: always

  frontend:
    image: kdmid-scheduler-frontend
    container_name: frontend
    build:
      context: ../src/frontend/telegram-webapp
      dockerfile: ./Dockerfile
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    networks:
      - kdmid-scheduler-network
    ports:
      - 3000:3000
    # depends_on:
    #   - backend-api
    restart: always

networks:
  kdmid-scheduler-network: {}

volumes:
  mongodb_1-data:
  mongodb_2-data:
  mongodb_3-data:
  mongodb_1-config:
  mongodb_2-config:
  mongodb_3-config:
